var tsApi=require("typescript-api"),fs=require("fs"),path=require("path");module.exports=function(){function a(a){var b=fs.existsSync(a);b&&(fs.readdirSync(a).forEach(function(b){var c=path.join(a,b);fs.unlinkSync(c)}),fs.rmdirSync(a))}function b(a){var b=new module.constructor;return b._compile(a),b.exports}function c(a){var b=new tsApi.TypeScriptCompiler,c=tsApi.ScriptSnapshot.fromString(a.source);b.addFile("typescriptHandler.ts",c);var d=b.compile();d.moveNext();var e=d.current();if(e.diagnostics&&e.diagnostics.length>0)throw new Error("TS compilation error.");return e}function d(a){var d=c(a);return b(d.outputFiles[0].text)}function e(a){var b=f(a.file,a.fileEncoding);return d({source:b})}function f(a,b){return fs.readFileSync(a,b)}function g(a,b,c){fs.writeFileSync(a,c,b)}function h(a){if(!a)throw new Error("Options invalid.");if(!a.source&&!a.file)throw new Error("No data source defined.");if(a.source&&a.file)throw new Error("Unable to determine which data source to use. Both defined.");if(a.file){if(!fs.existsSync(a.file))throw new Error("Source file does not exist.");a.fileEncoding||(a.fileEncoding=k)}}function i(a){a.compiledPath||(a.compiledPath="compiled_tmp/untitled.js");var b=path.dirname(a.compiledPath);fs.existsSync(b)||fs.mkdirSync(b)}function j(a){l=path.dirname(a)}var k="utf-8",l=null;return process.on("exit",function(){l&&a(l)}),{require:function(a){h(a);var b;return a.source?b=d(a):a.file&&(b=e(a)),b},compile:function(a){h(a);var b;if(a.source){var d=c(a);b=d.outputFiles[0].text}else if(a.file){var e=f(a.file,a.fileEncoding),g=c({source:e});b=g.outputFiles[0].text}return b},compileToDisk:function(a){h(a),i(a);var d,e;if(j(a.compiledPath),a.source)e=c(a),d=e.outputFiles[0].text;else if(a.file){var k=f(a.file,a.fileEncoding);e=c({source:k}),d=e.outputFiles[0].text}return g(a.compiledPath,a.fileEncoding,d),{path:a.compiledPath,require:function(){var c=f(a.compiledPath,a.fileEncoding);return b(c.toString())}}}}}();
//# sourceMappingURL=typescript-handler.min.js.map