var tsApi=require("typescript-api"),fs=require("fs");module.exports=function(){function a(a){var b=new module.constructor;return b._compile(a),b.exports}function b(a){var b=new tsApi.TypeScriptCompiler,c=tsApi.ScriptSnapshot.fromString(a.source);b.addFile("typescriptHandler.ts",c);var d=b.compile();d.moveNext();var e=d.current();if(e.diagnostics&&e.diagnostics.length>0)throw new Error("TS compilation error.");return e}function c(c){var d=b(c);return a(d.outputFiles[0].text)}function d(a){var b=e(a.file,a.fileEncoding);return c({source:b})}function e(a,b){return fs.readFileSync(a,b)}function f(a){if(!a)throw new Error("Options invalid.");if(!a.source&&!a.file)throw new Error("No data source defined.");if(a.source&&a.file)throw new Error("Unable to determine which data source to use. Both defined.");if(a.file){if(!fs.existsSync(a.file))throw new Error("Source file does not exist.");a.fileEncoding||(a.fileEncoding=g)}}var g="utf-8";return{require:function(a){f(a);var b;return a.source?b=c(a):a.file&&(b=d(a)),b},compile:function(a){f(a);var c;if(a.source){var d=b(a);c=d.outputFiles[0].text}else if(a.file){var g=e(a.file,a.fileEncoding),h=b({source:g});c=h.outputFiles[0].text}return c}}}();
//# sourceMappingURL=typescript-handler.min.js.map